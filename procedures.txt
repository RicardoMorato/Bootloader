getchar
    função:
        coloca em al o valor da tecla pressionada do teclado


putchar
    função:
        imprime na tela o byte que está armazenado em al
    exemplo de uso:
        mov al, '0'
        call putchar


endl
    função:
        faz a quebra de linha, o cursor va ficar no inicio da próxima linha


print
    função:
        imprime na tela a string armazenada em uma variável parâmetro str
    uso:
        push str   ; vai colocar na pilha o edereço armazenado em str(a primmeira posição da string)
        call print
        add sp, 2  ;remove da pilha o endereço (endereços tem 2 bytes de tamanho)


movecursor
    função:
        move o cursor para a coluna cC e linha lL(cC e lL são bytes arbitrários)
    uso:
        push 0xlLcC
        call movecursor
        add sp, 2

clear
    função:
        limpa a tela, seta a cor b para o background e l para a letra, coloca o cursor na linha
        lL e coluna cC
    uso:
        push 0xlLcC ; parâmetros para o movecursor interno a clear
        push 0xbl   ; b é a cor do background e l é a cor da letra
        call clear
        add sp, 4

        obs.: a pilha só insere uma quantidades pares maiores que 0 de bytes, quando fizemos
        push 0xbl, o que inserimos foi 0x00bl por isso removemos 4 bytes da pilha


str_cmp
    função:
        compara os N primeiros caracteres de duas variaveis strings str1 e str2
        seta o valor de uma variável flag como um, do contrário seta como 0
    uso:
        push str1
        push str2
        push N
        call str_cmp
        add sp, 6


tip_top
    função:
        imprimir a string do top da tela de dica com o número N da dica
    uso:
        push 'N'
        call tip_top
        add sp, 2


default_screen
    função:
        imprime a tela default com o número 'N' da dica, a string da dica atual e as opções
    uso:
        push options ; string das opções
        push tip     ; string da lista
        push 'N'       ; número da dica
        call default_screen
        add sp, 6


set_option:
    função:
        verifica qual são as opções
        se forem 1 2:
            lẽ a opção se for 2 pula pra a próxima, se for 1 coloca na tela de resposta faz a
            leitura da resposta vê se é a resposta correta se for vai pra tela de acertou
            se não para a tela de errou
        se for 1:
            espera o usuário apertar 1, quado ele aperta mostra
            a tela de leitura, compara o input com a resposta
            se for certa mostra a tela de correto, do contrário
            mostra a tela de errado
    uso:
        push size_ans ; tem que ser uma constante, não variável
        push ans      ; string da resposta
        push turn     ; número do turno atual, também deve ser uma constante
        push options  ; deve ser 0 se eu quero que tenha 2 opções
                      ;e 1 se sóquero uma
        call set_option
        add sp, 8


pontuacao:
    função:
        verifica qual a pontuação do usuário no final do jogo.
        Caso a pessoa só tenha acertado uma palavra, ela irá receber uma pontuação de 50 pontos.
        Caso a pessoa tenha acertado duas palavras, ela irá receber uma pontuação de 100 pontos.
        Caso a pessoa tenha acertado três palavras, ela irá receber uma pontuação de 150 pontos.
        Caso a pessoa tenha acertado quatro palavras, ela irá receber uma pontuação de 200 pontos.
    uso:
        call pontuacao


how_to_play:
    função:
        Mostra a tela de "Como jogar".
        Dentro da tela aparecem todas as informações de como jogar o jogo.
        Sua implementação é bem simples, se baseia em um conjunto de chamadas das funções "print" e "movecursor".
    uso:
        call how_to_play

macro turn:
    função:
        mostrar as 3 telas de dicas, fazer a leitura da reposta,
        verificar se a resposta está certa se estiver mostra a tela
        de acertou se não mostra a tela de errou
    uso:
        turn size_ans, N ; size_ans é o tamanho da resposta
                         ; N é o número do turno
macro next:
    função:
        vê qual é o turno da set_option atual e faz o jump
        para o label após esse turno
    uso:
        next
